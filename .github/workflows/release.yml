name: Create Single Release with Multi-Builds

on:
    push:
        branches:
            - main

jobs:
    install-dependencies:
        name: Install Dependencies
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 18
                  cache: 'npm'

            - name: Install dependencies
              run: npm install

            - name: Cache node_modules
              uses: actions/cache@v4
              with:
                  path: node_modules
                  key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
                  restore-keys: npm-${{ runner.os }}-

    build:
        name: Build Next.js App
        runs-on: ubuntu-latest
        needs: install-dependencies
        strategy:
            matrix:
                network: [devnet, testnet, mainnet]
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Restore node_modules cache
              uses: actions/cache@v4
              with:
                  path: node_modules
                  key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
                  restore-keys: npm-${{ runner.os }}-

            - name: Build Next.js app for ${{ matrix.network }}
              run: npm run build:${{ matrix.network }}
              env:
                  NODE_ENV: production
                  MORALIS_API_KEY: ${{ secrets.MORALIS_API_KEY }}

            - name: Archive standalone build
              run: tar -czvf nextjs-build-${{ matrix.network }}.tar.gz .next/standalone .next/static

            - name: Upload Build as Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: nextjs-build-${{ matrix.network }}
                  path: nextjs-build-${{ matrix.network }}.tar.gz

    release:
        name: Create Single GitHub Release
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Download All Artifacts
              uses: actions/download-artifact@v4
              with:
                  path: builds

            - name: Generate version from commit hash
              id: version
              run: |
                  echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
                  echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

            - name: List downloaded files
              run: ls -R builds

            - name: Create GitHub Release
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: v-${{ steps.version.outputs.VERSION }}
                  name: Release v-${{ steps.version.outputs.VERSION }}
                  draft: false
                  prerelease: false
                  files: builds/**/*
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
